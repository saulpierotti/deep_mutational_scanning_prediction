`min_child_weight`=0,
`max_depth`=6
)
selected_param_values_by_position <- c(
alpha=0.1,
lambda=1,
gamma=0.1,
eta=0.01,
subsample=0.5,
`colsample_bytree`=0.25,
`min_child_weight`=2,
`max_depth`=6,
`num_rounds`=1000
)
test_result_naive_tb <-
get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
test_result_by_position_tb <-
get_test_result_tb("../../testing_results/single_protein_models/by_position/test_results.csv.xz")
random_search_results_naive_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/naive/random_search_results.csv.xz"
)
random_search_results_by_position_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/by_position/random_search_results.csv.xz"
)
library(tikzDevice)
library(cowplot)
library(scales)
library(Biostrings)
library(tidyverse)
library(rlang)
library(caret)
library(circular)
library(Directional)
library(reshape2)
source("./utils/constants.R")
source("./utils/functions.R")
tb <-
read_csv(
"../../dataset/dms_training.csv",
col_types = cols_only(
dms_id = readr::col_factor(levels = datasets),
position = "i",
aa1 = readr::col_factor(levels = residues),
aa2 = readr::col_factor(levels = residues),
reported_fitness = "d",
hmm_pssm_C = "d",
hmm_pssm_G = "d",
hmm_pssm_P = "d",
hmm_pssm_A = "d",
hmm_pssm_V = "d",
hmm_pssm_L = "d",
hmm_pssm_I = "d",
hmm_pssm_M = "d",
hmm_pssm_F = "d",
hmm_pssm_Y = "d",
hmm_pssm_W = "d",
hmm_pssm_T = "d",
hmm_pssm_S = "d",
hmm_pssm_N = "d",
hmm_pssm_Q = "d",
hmm_pssm_D = "d",
hmm_pssm_E = "d",
hmm_pssm_H = "d",
hmm_pssm_K = "d",
hmm_pssm_R = "d",
hmm_pssm_aa1_likelyhood = "d",
hmm_pssm_aa2_likelyhood = "d",
hmm_pssm_delta_likelyhood = "d",
netsurf_rsa = "d",
netsurf_asa = "d",
netsurf_p_q8_G = "d",
netsurf_p_q8_H = "d",
netsurf_p_q8_I = "d",
netsurf_p_q8_B = "d",
netsurf_p_q8_E = "d",
netsurf_p_q8_S = "d",
netsurf_p_q8_T = "d",
netsurf_p_q8_C = "d",
netsurf_p_q3_H = "d",
netsurf_p_q3_E = "d",
netsurf_p_q3_C = "d",
netsurf_phi = "d",
netsurf_psi = "d",
netsurf_disorder = "d",
dssp_rsa = "d",
dssp_asa = "d",
dssp_sec_struct = readr::col_factor(levels = sec_struct_q8_levels),
dssp_phi = "d",
dssp_psi = "d",
ev_independent = "d",
ev_epistatic = "d",
ev_conservation = "d",
ev_frequency = "d",
tr_rosetta_graph_closeness_centrality = "d",
tr_rosetta_graph_betweenness_centrality = "d",
tr_rosetta_graph_degree_centrality = "d",
tr_rosetta_graph_load_centrality = "d",
tr_rosetta_graph_harmonic_centrality = "d",
tr_rosetta_graph_clustering = "d"
)
) %>%
normalize_scores() %>%
subset(select = -c(reported_fitness))
data("BLOSUM100") # this is from the Biostrings package
blosum_tb <-BLOSUM100 %>%
as_tibble(rownames = NA) %>%
rownames_to_column("aa1") %>%
pivot_longer(cols = -c(aa1), names_to = "aa2", values_to = "score") %>%
filter(aa1 %in% residues & aa2 %in% residues) %>%
mutate(aa1 = factor(aa1, levels = residues),
aa2 = factor(aa2, levels = residues))
average_wt_blosum <- (blosum_tb %>%
filter(aa1 == aa2) %>%
subset(select = c(score)) %>%
summarise(score= mean(score)))[[1]]
blosum_tb <- blosum_tb %>%
mutate(scaled_score = rescale(score) - rescale(average_wt_blosum, from = c(min(score), max(score))))
distance_tb <-
read_csv(
"../../processing/structures/experimental_and_predicted_distances.csv",
col_types = cols_only(
dms_id = readr::col_factor(levels = datasets),
position_1 = "i",
position_2 = "i",
tr_rosetta_distance = "d",
experimental_distance = "d"
)
)
get_corr_values(tb, score, tr_rosetta_graph_closeness_centrality)
get_corr_values(tb, score, tr_rosetta_graph_betweenness_centrality)
get_corr_values(tb, score, tr_rosetta_graph_degree_centrality)
get_corr_values(tb, score, tr_rosetta_graph_load_centrality)
get_corr_values(tb, score, tr_rosetta_graph_harmonic_centrality)
get_corr_values(tb, score, tr_rosetta_graph_clustering)
get_top_L_stats(distance_tb)
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
selected_param_values_naive <- c(
alpha=0,
lambda=4,
gamma=0.1,
eta=0.01,
num_rounds=1000,
subsample=0.6,
`colsample_bytree`=1,
`min_child_weight`=0,
`max_depth`=6
)
selected_param_values_by_position <- c(
alpha=0.1,
lambda=1,
gamma=0.1,
eta=0.01,
subsample=0.5,
`colsample_bytree`=0.25,
`min_child_weight`=2,
`max_depth`=6,
`num_rounds`=1000
)
test_result_naive_tb <-
get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
test_result_by_position_tb <-
get_test_result_tb("../../testing_results/single_protein_models/by_position/test_results.csv.xz")
random_search_results_naive_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/naive/random_search_results.csv.xz"
)
plot <-
get_random_search_results_plot(random_search_results_by_position_tb,
selected_param_values_by_position) +
coord_cartesian(ylim = c(0.58, 0.6))
plot <-
get_random_search_results_plot(random_search_results_by_position_tb,
selected_param_values_by_position) +
coord_cartesian(ylim = c(0.58, 0.6))
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
selected_param_values_naive <- c(
alpha=0,
lambda=4,
gamma=0.1,
eta=0.01,
num_rounds=1000,
subsample=0.6,
`colsample_bytree`=1,
`min_child_weight`=0,
`max_depth`=6
)
selected_param_values_by_position <- c(
alpha=0.1,
lambda=1,
gamma=0.1,
eta=0.01,
subsample=0.5,
`colsample_bytree`=0.25,
`min_child_weight`=2,
`max_depth`=6,
`num_rounds`=1000
)
test_result_naive_tb <-
get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
test_result_by_position_tb <-
get_test_result_tb("../../testing_results/single_protein_models/by_position/test_results.csv.xz")
random_search_results_naive_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/naive/random_search_results.csv.xz"
)
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
selected_param_values_naive <- c(
alpha=0,
lambda=4,
gamma=0.1,
eta=0.01,
num_rounds=1000,
subsample=0.6,
`colsample_bytree`=1,
`min_child_weight`=0,
`max_depth`=6
)
selected_param_values_by_position <- c(
alpha=0.1,
lambda=1,
gamma=0.1,
eta=0.01,
subsample=0.5,
`colsample_bytree`=0.25,
`min_child_weight`=2,
`max_depth`=6,
`num_rounds`=1000
)
test_result_naive_tb <-
get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
test_result_by_position_tb <-
get_test_result_tb("../../testing_results/single_protein_models/by_position/test_results.csv.xz")
random_search_results_naive_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/naive/random_search_results.csv.xz"
)
random_search_results_by_position_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/by_position/random_search_results.csv.xz"
)
plot <-
get_random_search_results_plot(random_search_results_by_position_tb,
selected_param_values_by_position) +
coord_cartesian(ylim = c(0.58, 0.6))
print(plot)
create_tikz(plot,
"single_protein_models_by_position_raqndom_search.tex",
latex_textheight*0.5,
latex_textwidth)
plot <-
get_learning_curves_plot(random_search_results_by_position_tb,
selected_param_values_by_position)
print(plot)
create_tikz(plot,
"single_protein_models_by_position_learning_curve.tex",
3,
latex_textwidth)
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
selected_param_values_naive <- c(
alpha=0,
lambda=4,
gamma=0.1,
eta=0.01,
num_rounds=1000,
subsample=0.6,
`colsample_bytree`=1,
`min_child_weight`=0,
`max_depth`=6
)
selected_param_values_by_position <- c(
alpha=0.1,
lambda=1,
gamma=0.1,
eta=0.01,
subsample=0.5,
`colsample_bytree`=0.25,
`min_child_weight`=2,
`max_depth`=6,
`num_rounds`=1000
)
test_result_naive_tb <-
get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
test_result_by_position_tb <-
get_test_result_tb("../../testing_results/single_protein_models/by_position/test_results.csv.xz")
random_search_results_naive_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/naive/random_search_results.csv.xz"
)
random_search_results_by_position_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/single_protein_models/by_position/random_search_results.csv.xz"
)
plot <-
get_random_search_results_plot(random_search_results_by_position_tb,
selected_param_values_by_position) +
coord_cartesian(ylim = c(0.58, 0.6))
print(plot)
create_tikz(plot,
"single_protein_models_by_position_random_search.tex",
latex_textheight*0.5,
latex_textwidth)
plot <- get_test_result_by_dataset_plot(test_result_by_position_tb)
print(plot)
create_tikz(
plot,
"single_protein_models_by_position_test_result_correlations.tex",
latex_textheight*0.5,
latex_textwidth
)
plot <- get_test_result_summary_plot(test_result_by_position_tb)
print(plot)
create_tikz(plot,
"single_protein_models_by_position_test_result_summary.tex",
3,
latex_textwidth)
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
# selected_param_values_xgb <- c(
#   alpha=0,
#   lambda=4,
#   gamma=0.1,
#   eta=0.01,
#   num_rounds=1000,
#   subsample=0.6,
#   `colsample_bytree`=1,
#   `min_child_weight`=0,
#   `max_depth`=6
# )
# test_result_xgb_tb <-
#   get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
random_search_results_xgb_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/lopo_models/gradient_boosted_trees/random_search_results.csv.xz"
)
selected_param_values_xgb <- c( # this are just a placeholder for now, not real
alpha=0,
lambda=4,
gamma=0.1,
eta=0.01,
num_rounds=1000,
subsample=0.6,
`colsample_bytree`=1,
`min_child_weight`=0,
`max_depth`=6
)
# test_result_xgb_tb <-
#   get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
random_search_results_xgb_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/lopo_models/gradient_boosted_trees/random_search_results.csv.xz"
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb)
#coord_cartesian(ylim = c(0.8, 0.82))
print(plot)
create_tikz(
plot,
"single_protein_models_naive_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_naive_tb,
selected_param_values_naive) +
coord_cartesian(ylim = c(0.8, 0.82))
print(plot)
create_tikz(
plot,
"single_protein_models_naive_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb)
#coord_cartesian(ylim = c(0.8, 0.82))
print(plot)
create_tikz(
plot,
"lopo_models_xgb_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb) +
coord_cartesian(ylim = c(0.8, 0.82))
print(plot)
create_tikz(
plot,
"lopo_models_xgb_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb) +
coord_cartesian(ylim = c(0.8, 0.82))
print(plot)
create_tikz(
plot,
"lopo_models_xgb_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb) +
coord_cartesian(ylim = c(0.4, 0.82))
print(plot)
create_tikz(
plot,
"lopo_models_xgb_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb) +
coord_cartesian(ylim = c(0, 1))
print(plot)
create_tikz(
plot,
"lopo_models_xgb_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_random_search_results_plot(
random_search_results_xgb_tb,
selected_param_values_xgb) +
coord_cartesian(ylim = c(0, 1))
print(plot)
create_tikz(
plot,
"lopo_models_xgb_random_search.tex",
latex_textheight * 0.5,
latex_textwidth
)
plot <-
get_learning_curves_plot(random_search_results_xgb_tb,
selected_param_values_xgb)
plot <-
get_learning_curves_plot(random_search_results_xgb_tb,
selected_param_values_xgb)
selected_param_values_xgb <- c( # this are just a placeholder for now, not real
alpha=0,
lambda=4,
gamma=0.1,
eta=0.01,
num_rounds=1000,
subsample=0.6,
`colsample_bytree`=1,
`min_child_weight`=0,
`max_depth`=6
)
# test_result_xgb_tb <-
#   get_test_result_tb("../../testing_results/single_protein_models/naive/test_results.csv.xz")
random_search_results_xgb_tb <-
get_random_search_results_tb(
"../../hyperparameter_search/lopo_models/gradient_boosted_trees/random_search_results.csv.xz"
)
plot <-
get_learning_curves_plot(random_search_results_xgb_tb,
selected_param_values_xgb)
View(random_search_results_xgb_tb)
library(tidyverse)
library(tikzDevice)
library(cowplot)
library(scales)
source("./utils/constants.R")
source("./utils/functions.R")
